{
  "name": "leif-client",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "build": "NODE_ENV=production node ./build.js",
    "start": "NODE_ENV=dev node ./build.js",
    "test": "jest --no-cache",
    "lint": "eslint --no-cache client/**"
  },
  "author": "",
  "license": "MIT",
  "dependencies": {
    "@types/react": "^18.3.1",
    "@types/react-dom": "^18.3.0",
    "esbuild": "^0.20.2",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "typescript": "^5.4.5"
  },
  "devDependencies": {
    "@types/jest": "^29.5.12",
    "@typescript-eslint/eslint-plugin": "^7.7.1",
    "@typescript-eslint/parser": "^7.7.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.1",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "ts-jest": "^29.1.2"
  },
  "jest": {
    "testEnvironment": "jsdom",
    "testRegex": "client/.+\\.test\\.tsx?$",
    "transform": {
      "\\.tsx?$": [
        "ts-jest",
        {
          "tsconfig": "<rootDir>/tsconfig.json"
        }
      ]
    }
  },
  "eslintConfig": {
    "root": true,
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/strict-type-checked",
      "plugin:react/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "project": [
        "./tsconfig.json"
      ]
    },
    "plugins": [
      "@typescript-eslint",
      "react"
    ],
    "rules": {
      "@typescript-eslint/no-floating-promises": [
        "off"
      ],
      "@typescript-eslint/no-non-null-assertion": [
        "off"
      ],
      "@typescript-eslint/no-unsafe-argument": [
        "off"
      ],
      "@typescript-eslint/no-unsafe-assignment": [
        "off"
      ],
      "@typescript-eslint/no-unsafe-enum-comparison": [
        "off"
      ],
      "@typescript-eslint/no-unused-vars": [
        "off"
      ],
      "@typescript-eslint/prefer-promise-reject-errors": [
        "off"
      ],
      "@typescript-eslint/restrict-template-expressions": [
        "off"
      ],
      "indent": [
        "error",
        2,
        {
          "SwitchCase": 1
        }
      ],
      "no-empty": [
        "error",
        {
          "allowEmptyCatch": true
        }
      ],
      "operator-linebreak": [
        "error",
        "before"
      ],
      "react/jsx-indent": [
        "error",
        2
      ]
    },
    "ignorePatterns": [
      "**/*.test.ts",
      "**/*.test.tsx"
    ],
    "settings": {
      "react": {
        "version": "detect"
      }
    }
  }
}
